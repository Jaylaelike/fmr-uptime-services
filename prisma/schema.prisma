generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  monitors      Monitor[]
  notifications Notification[]
}

model Monitor {
  id            String         @id @default(cuid())
  name          String
  url           String
  interval      Int            @default(60)
  timeout       Int            @default(30)
  isActive      Boolean        @default(true)
  lastCheck     DateTime?
  status        Status         @default(UP)
  userId        String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  events        Event[]
  user          User           @relation(fields: [userId], references: [id])
  notifications Notification[]
  webhook       Webhook?
}

model Event {
  id        String   @id @default(cuid())
  status    Status
  monitorId String
  createdAt DateTime @default(now())
  monitor   Monitor  @relation(fields: [monitorId], references: [id])
}

model Webhook {
  id        String   @id @default(cuid())
  url       String
  monitorId String   @unique
  message   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  monitor   Monitor  @relation(fields: [monitorId], references: [id])
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  status    Status
  userId    String
  monitorId String
  sent      Boolean  @default(false)
  createdAt DateTime @default(now())
  monitor   Monitor  @relation(fields: [monitorId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum Status {
  UP
  DOWN
}
